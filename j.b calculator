import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;
/**
 *
 * Beschreibung
 *
 * @version 1.0 vom 04.09.2020
 * @author 
 */

public class jay_ich_programiere extends JFrame {
  // Anfang Attribute
  private JButton bClear = new JButton();
  private JButton b1 = new JButton();
  private JButton bBeenden = new JButton();
  private JLabel lEingabe1 = new JLabel();
  private JLabel lEingabe2 = new JLabel();
  private JLabel lErgebnis = new JLabel();
  private JLabel lNurZahlen = new JLabel();
  private JNumberField jNumberField1 = new JNumberField();
  private JNumberField jNumberField2 = new JNumberField();
  private JNumberField jNumberField3 = new JNumberField();
  private JButton b = new JButton();
  private JButton b2 = new JButton();
  private JButton b3 = new JButton();
  private JButton bWeiter = new JButton();
  private JLabel lKopiert = new JLabel();
  private JButton bQuadrieren = new JButton();
  private JButton bWurzel = new JButton();
  private JLabel lNurinEingabeFeld1moeglich = new JLabel();
  private JButton bPotenzieren = new JButton();
  private JLabel lUnmoeglich = new JLabel();
  // Ende Attribute
  
  public jay_ich_programiere() { 
    // Frame-Initialisierung
    super();
    setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    int frameWidth = 305; 
    int frameHeight = 377;
    setSize(frameWidth, frameHeight);
    Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
    int x = (d.width - getSize().width) / 2;
    int y = (d.height - getSize().height) / 2;
    setLocation(x, y);
    setTitle("jay_ich_programiere");
    setResizable(false);
    Container cp = getContentPane();
    cp.setLayout(null);
    // Anfang Komponenten
    
    bClear.setBounds(200, 120, 75, 25);
    bClear.setText("Clear");
    bClear.setMargin(new Insets(2, 2, 2, 2));
    bClear.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        bClear_ActionPerformed(evt);
      }
    });
    bClear.setBackground(new Color(0xC0C0C0));
    cp.add(bClear);
    b1.setBounds(14, 144, 75, 25);
    b1.setText("+");
    b1.setMargin(new Insets(2, 2, 2, 2));
    b1.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b1_ActionPerformed(evt);
      }
    });
    b1.setBackground(Color.GRAY);
    cp.add(b1);
    bBeenden.setBounds(190, 150, 90, 43);
    bBeenden.setText("Beenden");
    bBeenden.setMargin(new Insets(2, 2, 2, 2));
    bBeenden.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        bBeenden_ActionPerformed(evt);
      }
    });
    bBeenden.setBackground(Color.WHITE);
    cp.add(bBeenden);
    lEingabe1.setBounds(16, 48, 110, 20);
    lEingabe1.setText("Eingabe 1");
    lEingabe1.setBackground(new Color(0xFFC800));
    lEingabe1.setOpaque(true);
    cp.add(lEingabe1);
    lEingabe2.setBounds(16, 80, 110, 20);
    lEingabe2.setText("Eingabe 2");
    lEingabe2.setBackground(new Color(0xFFC800));
    lEingabe2.setOpaque(true);
    cp.add(lEingabe2);
    lErgebnis.setBounds(16, 288, 110, 20);
    lErgebnis.setText("Ergebnis");
    lErgebnis.setBackground(new Color(0xFFC800));
    lErgebnis.setOpaque(true);
    cp.add(lErgebnis);
    lNurZahlen.setBounds(144, 8, 110, 20);
    lNurZahlen.setText("Nur Zahlen!");
    cp.add(lNurZahlen);
    jNumberField1.setBounds(152, 48, 75, 20);
    jNumberField1.setText("");
    cp.add(jNumberField1);
    jNumberField2.setBounds(152, 80, 75, 20);
    jNumberField2.setText("");
    cp.add(jNumberField2);
    jNumberField3.setBounds(136, 288, 75, 20);
    jNumberField3.setText("");
    jNumberField3.setEditable(false);
    cp.add(jNumberField3);
    b.setBounds(14, 176, 75, 25);
    b.setText("-");
    b.setMargin(new Insets(2, 2, 2, 2));
    b.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b_ActionPerformed(evt);
      }
    });
    b.setBackground(Color.GRAY);
    cp.add(b);
    b2.setBounds(96, 144, 75, 25);
    b2.setText("*");
    b2.setMargin(new Insets(2, 2, 2, 2));
    b2.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b2_ActionPerformed(evt);
      }
    });
    b2.setBackground(Color.GRAY);
    cp.add(b2);
    b3.setBounds(96, 176, 75, 25);
    b3.setText("/");
    b3.setMargin(new Insets(2, 2, 2, 2));
    b3.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b3_ActionPerformed(evt);
      }
    });
    b3.setBackground(Color.GRAY);
    cp.add(b3);
    bWeiter.setBounds(200, 200, 75, 25);
    bWeiter.setText("weiter");
    bWeiter.setMargin(new Insets(2, 2, 2, 2));
    bWeiter.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        bWeiter_ActionPerformed(evt);
      }
    });
    bWeiter.setBackground(new Color(0xC0C0C0));
    bWeiter.setVisible(true);
    cp.add(bWeiter);
    lKopiert.setBounds(216, 288, 110, 20);
    lKopiert.setText("kopiert");
    lKopiert.setVisible(false);
    cp.add(lKopiert);
    bQuadrieren.setBounds(16, 240, 75, 25);
    bQuadrieren.setText("Quadrieren");
    bQuadrieren.setMargin(new Insets(2, 2, 2, 2));
    bQuadrieren.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        bQuadrieren_ActionPerformed(evt);
      }
    });
    bQuadrieren.setBackground(new Color(0xC0C0C0));
    cp.add(bQuadrieren);
    bWurzel.setBounds(96, 240, 75, 25);
    bWurzel.setText("Wurzel");
    bWurzel.setMargin(new Insets(2, 2, 2, 2));
    bWurzel.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        bWurzel_ActionPerformed(evt);
      }
    });
    bWurzel.setBackground(new Color(0xC0C0C0));
    cp.add(bWurzel);
    lNurinEingabeFeld1moeglich.setBounds(9, 208, 171, 19);
    lNurinEingabeFeld1moeglich.setText("nur in Eingabe Feld 1 möglich!");
    lNurinEingabeFeld1moeglich.setBackground(Color.RED);
    lNurinEingabeFeld1moeglich.setOpaque(true);
    cp.add(lNurinEingabeFeld1moeglich);
    bPotenzieren.setBounds(192, 240, 91, 25);
    bPotenzieren.setText("Potenzieren");
    bPotenzieren.setMargin(new Insets(2, 2, 2, 2));
    bPotenzieren.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        bPotenzieren_ActionPerformed(evt);
      }
    });
    bPotenzieren.setBackground(new Color(0xC0C0C0));
    cp.add(bPotenzieren);
    lUnmoeglich.setBounds(216, 288, 110, 20);
    lUnmoeglich.setText("unmöglich");
    lUnmoeglich.setVisible(false);
    cp.add(lUnmoeglich);
    // Ende Komponenten
    
    setVisible(true);
  } // end of public jay_ich_programiere
  
  // Anfang Methoden
  
  public static void main(String[] args) {
    new jay_ich_programiere();
  } // end of main
  
  public void bClear_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    jNumberField1.clear();
    jNumberField2.clear();
  } // end of bClear_ActionPerformed

  public void b1_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    jNumberField3.setFloat(jNumberField1.getFloat()+jNumberField2.getFloat());
  } // end of b1_ActionPerformed

  public void bBeenden_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    System.exit(0); 
  } // end of bBeenden_ActionPerformed

  public void b_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    jNumberField3.setFloat(jNumberField1.getFloat()-jNumberField2.getFloat());
  } // end of b_ActionPerformed

  public void b2_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    jNumberField3.setFloat(jNumberField1.getFloat()*jNumberField2.getFloat());
  } // end of b2_ActionPerformed

  public void b3_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    jNumberField3.setFloat(jNumberField1.getFloat()/jNumberField2.getFloat());
    if (jNumberField3.getFloat() == 0) {
      lUnmoeglich.setVisible(true);
    } // end of if
    Executors.newSingleThreadScheduledExecutor().schedule(() -> {
      lUnmoeglich.setVisible(false);
    }, 2500, TimeUnit.MILLISECONDS);
    if (jNumberField3.getFloat() == 0) {
      jNumberField3.clear();
    } // end of if
  } // end of b3_ActionPerformed

  public void bWeiter_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    jNumberField1.setFloat(jNumberField3.getFloat());
    lKopiert.setVisible(true);
    Executors.newSingleThreadScheduledExecutor().schedule(() -> {
      lKopiert.setVisible(false);
    }, 500, TimeUnit.MILLISECONDS);
  } // end of bWeiter_ActionPerformed

  public void bQuadrieren_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    jNumberField3.setFloat(jNumberField1.getFloat()*jNumberField1.getFloat());
  } // end of bQuadrieren_ActionPerformed

  public void bWurzel_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    jNumberField3.setDouble(Math.sqrt(jNumberField1.getDouble()));
  } // end of bWurzel_ActionPerformed

  public void bPotenzieren_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    jNumberField3.setDouble(Math.pow(jNumberField1.getDouble(),jNumberField2.getDouble()));
  } // end of bPotenzieren_ActionPerformed

  // Ende Methoden
} // end of class jay_ich_programiere
